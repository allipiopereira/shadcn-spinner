{
  "name": "spinner",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "ui/spinner.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst spinnerVariants = cva(\n  \"relative block opacity-[0.65]\",\n  {\n    variants: {\n      size: {\n        sm: \"w-4 h-4\",\n        md: \"w-6 h-6\",\n        lg: \"w-8 h-8\",\n      },\n    },\n    defaultVariants: {\n      size: \"sm\",\n    },\n  }\n);\n\nexport interface SpinnerProps\n  extends React.HTMLAttributes<HTMLSpanElement>,\n  VariantProps<typeof spinnerVariants> {\n  loading?: boolean;\n  asChild?: boolean;\n}\n\nconst Spinner = React.forwardRef<HTMLSpanElement, SpinnerProps>(\n  ({ className, size, loading = true, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"span\";\n\n    const [bgColorClass, filteredClassName] = React.useMemo(() => {\n      const bgClass = className?.match(/(?:dark:bg-|bg-)S+/g) || [];\n      const filteredClasses = className?.replace(/(?:dark:bg-|bg-)S+/g, '').trim();\n      return [bgClass, filteredClasses];\n    }, [className]);\n\n    if (!loading) return null;\n\n    return (\n      <Comp\n        className={cn(spinnerVariants({ size, className: filteredClassName }))}\n        ref={ref}\n        {...props}\n      >\n        {Array.from({ length: 8 }).map((_, i) => (\n          <span\n            key={i}\n            className=\"absolute top-0 left-1/2 w-[12.5%] h-full animate-spinner-leaf-fade\"\n            style={{\n              transform: `rotate(${i * 45}deg)`,\n              animationDelay: `${-(7 - i) * 100}ms`,\n            }}\n          >\n            <span\n              className={cn(\"block w-full h-[30%] rounded-full\", bgColorClass)}\n            ></span>\n          </span>\n        ))}\n      </Comp>\n    );\n  }\n);\n\nSpinner.displayName = \"Spinner\";\n\nexport { Spinner, spinnerVariants };\n",
      "type": "registry:ui",
      "target": ""
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {
          "keyframes": {
            "spinner-leaf-fade": {
            "0%, 100%": { "opacity": "0" }, 
            "50%": { "opacity": "1" }
            }
          },
          "animation": {
            "spinner-leaf-fade": "spinner-leaf-fade 800ms linear infinite"
          }
        }
      }
    }
  }
}